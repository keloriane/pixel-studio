{"ast":null,"code":"// Linear interpolation\nvar lerp = function lerp(a, b, n) {\n  return (1 - n) * a + n * b;\n}; // Gets the mouse position\n\n\nvar getMousePos = function getMousePos(e) {\n  var posx = 0;\n  var posy = 0;\n  if (!e) e = window.event;\n\n  if (e.clientX || e.clientY) {\n    posx = e.clientX;\n    posy = e.clientY;\n  }\n\n  return {\n    x: posx,\n    y: posy\n  };\n}; // Get sibilings\n\n\nvar getSiblings = function getSiblings(e) {\n  // for collecting siblings\n  var siblings = []; // if no parent, return no sibling\n\n  if (!e.parentNode) {\n    return siblings;\n  } // first child of the parent node\n\n\n  var sibling = e.parentNode.firstChild; // collecting siblings\n\n  while (sibling) {\n    if (sibling.nodeType === 1 && sibling !== e) {\n      siblings.push(sibling);\n    }\n\n    sibling = sibling.nextSibling;\n  }\n\n  return siblings;\n};\n\nexport { lerp, getMousePos, getSiblings };","map":{"version":3,"sources":["C:/Users/kengi/OneDrive/Documents/pixel-studio/src/utils/helpers/index.ts"],"names":["lerp","a","b","n","getMousePos","e","posx","posy","window","event","clientX","clientY","x","y","getSiblings","siblings","parentNode","sibling","firstChild","nodeType","push","nextSibling"],"mappings":"AAAA;AACA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP;AAAA,SAAa,CAAC,IAAIA,CAAL,IAAUF,CAAV,GAAcE,CAAC,GAAGD,CAA/B;AAAA,CAAb,C,CAEA;;;AACA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AACvB,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,IAAI,GAAG,CAAX;AACA,MAAI,CAACF,CAAL,EAAQA,CAAC,GAAGG,MAAM,CAACC,KAAX;;AACR,MAAIJ,CAAC,CAACK,OAAF,IAAaL,CAAC,CAACM,OAAnB,EAA4B;AACxBL,IAAAA,IAAI,GAAGD,CAAC,CAACK,OAAT;AACAH,IAAAA,IAAI,GAAGF,CAAC,CAACM,OAAT;AACH;;AACD,SAAO;AAAEC,IAAAA,CAAC,EAAEN,IAAL;AAAWO,IAAAA,CAAC,EAAEN;AAAd,GAAP;AACH,CATD,C,CAUA;;;AACA,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACT,CAAD,EAAO;AACvB;AACA,MAAIU,QAAQ,GAAG,EAAf,CAFuB,CAGvB;;AACA,MAAI,CAACV,CAAC,CAACW,UAAP,EAAmB;AACf,WAAOD,QAAP;AACH,GANsB,CAOvB;;;AACA,MAAIE,OAAO,GAAGZ,CAAC,CAACW,UAAF,CAAaE,UAA3B,CARuB,CASvB;;AACA,SAAOD,OAAP,EAAgB;AACZ,QAAIA,OAAO,CAACE,QAAR,KAAqB,CAArB,IAA0BF,OAAO,KAAKZ,CAA1C,EAA6C;AACzCU,MAAAA,QAAQ,CAACK,IAAT,CAAcH,OAAd;AACH;;AACDA,IAAAA,OAAO,GAAGA,OAAO,CAACI,WAAlB;AACH;;AACD,SAAON,QAAP;AACH,CAjBD;;AAmBA,SAASf,IAAT,EAAeI,WAAf,EAA4BU,WAA5B","sourcesContent":["// Linear interpolation\r\nconst lerp = (a, b, n) => (1 - n) * a + n * b;\r\n\r\n// Gets the mouse position\r\nconst getMousePos = (e) => {\r\n    let posx = 0;\r\n    let posy = 0;\r\n    if (!e) e = window.event;\r\n    if (e.clientX || e.clientY) {\r\n        posx = e.clientX;\r\n        posy = e.clientY;\r\n    }\r\n    return { x: posx, y: posy };\r\n};\r\n// Get sibilings\r\nconst getSiblings = (e) => {\r\n    // for collecting siblings\r\n    let siblings = [];\r\n    // if no parent, return no sibling\r\n    if (!e.parentNode) {\r\n        return siblings;\r\n    }\r\n    // first child of the parent node\r\n    let sibling = e.parentNode.firstChild;\r\n    // collecting siblings\r\n    while (sibling) {\r\n        if (sibling.nodeType === 1 && sibling !== e) {\r\n            siblings.push(sibling);\r\n        }\r\n        sibling = sibling.nextSibling;\r\n    }\r\n    return siblings;\r\n};\r\n\r\nexport { lerp, getMousePos, getSiblings };\r\n"]},"metadata":{},"sourceType":"module"}