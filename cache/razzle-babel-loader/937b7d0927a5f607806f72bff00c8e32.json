{"ast":null,"code":"import Matter from 'matter-js';\nimport Paper from 'paper';\nexport class Sketch {\n  constructor(options, el, imgUrl) {\n    this.Engine = Matter.Engine;\n    this.options = options;\n    this.path = el;\n    this.imgUrl = imgUrl;\n    this.Render = Matter.Render;\n    this.Runner = Matter.Runner;\n    this.World = Matter.World;\n    this.MouseConstraint = Matter.MouseConstraint;\n    this.Mouse = Matter.Mouse;\n    this.mouse = {\n      x: 0,\n      y: 0\n    };\n    this.Composite = Matter.Composite;\n    this.Constraint = Matter.Constraint;\n    this.Bodies = Matter.Bodies;\n    this.Body = Matter.Body;\n    this.time = 0;\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.initPaper();\n    this.physics();\n    this.addObject();\n    this.mouseEvents();\n    this.renderLoop();\n  }\n\n  mouseEvents() {\n    this.render.canvas.addEventListener('mousemove', e => {\n      this.mouse.x = e.clientX - this.cursor.positionPrev.x;\n      this.mouse.y = e.clientY - this.cursor.positionPrev.y;\n    });\n  }\n\n  resize() {}\n\n  physics() {\n    this.engine = this.Engine.create();\n    this.world = this.engine.world;\n    this.engine.world.gravity.x = 0;\n    this.engine.world.gravity.y = 0;\n    this.render = this.Render.create({\n      element: this.options,\n      engine: this.engine,\n      options: {\n        width: this.width,\n        height: this.height,\n        showVelocity: true\n      }\n    });\n    this.Render.run(this.render);\n    this.runner = this.Runner.create();\n    this.Runner.run(this.runner, this.engine);\n  }\n\n  addObject() {\n    this.shadow = new Paper.Path(this.path);\n    this.shadow.shadowBlur = 30;\n    this.pathLine = new Paper.Path(this.path);\n    this.pathLine.fillColor = '#000000';\n    this.number = this.pathLine.segments.length;\n    this.circles = [];\n    this.anchors = [];\n    this.links = [];\n    this.cursor = this.Bodies.circle(100, 100, 80, {\n      isStatic: false\n    });\n    this.center = this.Bodies.circle(100, 100, 100, {\n      isStatic: false\n    });\n    this.group = new Paper.Group([this.pathLine]);\n    this.group.clipped = true;\n    let img = new Image();\n\n    img.onload = () => {\n      const paper = Paper.view;\n      let rasterImg = new Paper.Raster(img, paper.center);\n      rasterImg.fitBounds(Paper.view.bounds, true);\n      /*rasterImg.width = 550\n      rasterImg.height = 480*/\n\n      this.group.addChild(rasterImg);\n    };\n\n    img.src = this.imgUrl;\n\n    for (let i = 0; i < this.number; i++) {\n      if (this.width > 1200) {\n        this.circles.push(this.Bodies.circle(this.pathLine.segments[i].point.x + this.width / 2.3, this.pathLine.segments[i].point.y + this.height / 7, 8, {\n          density: 0.005,\n          restitution: 1\n        }));\n      } else if (this.width < 1200) {\n        this.circles.push(this.Bodies.circle(this.pathLine.segments[i].point.x + this.width / 2.5, this.pathLine.segments[i].point.y + this.height / 8, 8, {\n          density: 0.005,\n          restitution: 1\n        }));\n      }\n\n      if (this.width > 1200) {\n        this.anchors.push(this.Bodies.circle(this.pathLine.segments[i].point.x + this.width / 2.5, this.pathLine.segments[i].point.y + this.height / 3, 100, {\n          density: 0.005,\n          restitution: 1\n        }));\n      } else if (this.width < 1200) {\n        this.anchors.push(this.Bodies.circle(this.pathLine.segments[i].point.x + this.width / 2.5, this.pathLine.segments[i].point.y + this.height / 2, 100, {\n          density: 0.005,\n          restitution: 1\n        }));\n      }\n    }\n\n    for (let i = 0; i < this.number; i++) {\n      let next = this.circles[i + 1] ? this.circles[i + 1] : this.circles[1];\n      this.links.push(this.Constraint.create({\n        bodyA: this.circles[i],\n        bodyB: this.anchors[i],\n        stiffness: 0.001\n      }));\n      this.links.push(this.Constraint.create({\n        bodyA: this.circles[i],\n        bodyB: next,\n        stiffness: 1.5\n      }));\n      /* this.links.push(\n         this.Constraint.create({\n           bodyA: this.circles[i],\n           bodyB: this.center,\n           stiffness: 0.05\n         })\n       )*/\n\n      let nextnext = this.circles[(i + 2) % this.number];\n      this.links.push(this.Constraint.create({\n        bodyA: this.circles[i],\n        bodyB: nextnext,\n        stiffness: 0.005\n      }));\n    }\n    /*    this.text = new Paper.PointText(new Paper.Point(this.width/10, 400 ));\n        this.text.bringToFront();\n        this.text.justification = 'center';\n        this.text.fillColor = 'black';\n        this.text.content = `\n            Creating Quality\n            Experiences For\n            Clients Looking\n            For the Best\n            Solution.\n        `;\n        this.text.fontSize = 65;\n        this.text.justification=\"left\"\n        this.text.blendMode = \"overlay\";\n         this.text.fontWeight = 800*/\n\n\n    this.World.add(this.engine.world, this.circles);\n    this.World.add(this.engine.world, this.cursor);\n    this.World.add(this.engine.world, this.links);\n    this.World.add(this.engine.world, this.center);\n  }\n\n  initPaper() {\n    this.paperCanvas = document.getElementById(\"paper\");\n    this.project = new Paper.Project(this.paperCanvas);\n  }\n\n  renderLoop() {\n    this.time += 0.05;\n    this.pathLine.smooth();\n\n    for (let i = 0; i < this.number; i++) {\n      this.pathLine.segments[i].point.x = this.circles[i].position.x;\n      this.pathLine.segments[i].point.y = this.circles[i].position.y;\n      this.shadow.segments[i].point.x = this.circles[i].position.x;\n      this.shadow.segments[i].point.y = this.circles[i].position.y;\n    }\n\n    this.Body.translate(this.cursor, {\n      x: this.mouse.x,\n      y: this.mouse.y\n    });\n    requestAnimationFrame(this.renderLoop.bind(this));\n  }\n\n}\n/*\n\n// create renderer\n\n\nRender.run(render);\n\n// create runner\nconst runner = Runner.create();\nRunner.run(runner, engine);\n*/\n// add bodies\n// add mouse control\n// keep the mouse in sync with rendering\n\n/*\n  render.mouse = mouse;\n*/\n// fit the render viewport to the scene\n// context for MatterTools.Demo","map":{"version":3,"sources":["C:/Users/kengi/OneDrive/Documents/pixel-studio/src/utils/header.skecth.js"],"names":["Matter","Paper","Sketch","constructor","options","el","imgUrl","Engine","path","Render","Runner","World","MouseConstraint","Mouse","mouse","x","y","Composite","Constraint","Bodies","Body","time","width","window","innerWidth","height","innerHeight","initPaper","physics","addObject","mouseEvents","renderLoop","render","canvas","addEventListener","e","clientX","cursor","positionPrev","clientY","resize","engine","create","world","gravity","element","showVelocity","run","runner","shadow","Path","shadowBlur","pathLine","fillColor","number","segments","length","circles","anchors","links","circle","isStatic","center","group","Group","clipped","img","Image","onload","paper","view","rasterImg","Raster","fitBounds","bounds","addChild","src","i","push","point","density","restitution","next","bodyA","bodyB","stiffness","nextnext","add","paperCanvas","document","getElementById","project","Project","smooth","position","translate","requestAnimationFrame","bind"],"mappings":"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","sourcesContent":["import Matter from 'matter-js';\nimport Paper from 'paper'\n\n\nexport class Sketch {\n    constructor(options, el, imgUrl) {\n        this.Engine = Matter.Engine;\n        this.options = options;\n        this.path = el;\n        this.imgUrl = imgUrl;\n        this.Render = Matter.Render;\n        this.Runner = Matter.Runner;\n        this.World = Matter.World;\n        this.MouseConstraint = Matter.MouseConstraint;\n        this.Mouse = Matter.Mouse;\n        this.mouse = {\n            x: 0,\n            y: 0\n        }\n        this.Composite = Matter.Composite;\n        this.Constraint = Matter.Constraint;\n        this.Bodies = Matter.Bodies;\n        this.Body = Matter.Body;\n        this.time = 0;\n        this.width = window.innerWidth;\n        this.height = window.innerHeight;\n\n        this.initPaper();\n        this.physics();\n        this.addObject();\n        this.mouseEvents()\n        this.renderLoop();\n    }\n\n    mouseEvents() {\n        this.render.canvas.addEventListener('mousemove', (e) => {\n            this.mouse.x = e.clientX - this.cursor.positionPrev.x;\n            this.mouse.y = e.clientY - this.cursor.positionPrev.y;\n        })\n    }\n\n    resize() {\n\n    }\n\n    physics() {\n        this.engine = this.Engine.create()\n        this.world = this.engine.world;\n        this.engine.world.gravity.x = 0;\n        this.engine.world.gravity.y = 0;\n        this.render = this.Render.create({\n            element: this.options,\n            engine: this.engine,\n            options: {\n                width: this.width,\n                height: this.height,\n                showVelocity: true\n            }\n        });\n        this.Render.run(this.render);\n        this.runner = this.Runner.create();\n        this.Runner.run(this.runner, this.engine)\n\n    }\n\n    addObject() {\n        this.shadow = new Paper.Path(this.path);\n\n        this.shadow.shadowBlur = 30;\n        this.pathLine = new Paper.Path(this.path);\n        this.pathLine.fillColor = '#000000'\n        this.number = this.pathLine.segments.length;\n        this.circles = []\n        this.anchors = []\n        this.links = []\n        this.cursor = this.Bodies.circle(100, 100, 80, {\n            isStatic: false,\n\n        });\n        this.center = this.Bodies.circle(100, 100, 100, {\n            isStatic: false,\n        })\n\n\n        this.group = new Paper.Group([this.pathLine]);\n        this.group.clipped = true;\n\n        let img = new Image();\n\n        img.onload = () => {\n            const paper = Paper.view;\n            let rasterImg = new Paper.Raster(img, paper.center);\n\n\n            rasterImg.fitBounds(Paper.view.bounds, true)\n            /*rasterImg.width = 550\n            rasterImg.height = 480*/\n            this.group.addChild(rasterImg)\n        }\n\n        img.src = this.imgUrl\n\n\n        for (let i = 0; i < this.number; i++) {\n\n            if (this.width > 1200) {\n                this.circles.push(\n                    this.Bodies.circle(\n                        this.pathLine.segments[i].point.x + this.width / 2.3,\n                        this.pathLine.segments[i].point.y + this.height / 7,\n                        8, {\n                            density: 0.005,\n                            restitution: 1\n                        }\n                    )\n                )\n            } else if (this.width < 1200) {\n                this.circles.push(\n                    this.Bodies.circle(\n                        this.pathLine.segments[i].point.x + this.width / 2.5,\n                        this.pathLine.segments[i].point.y + this.height / 8,\n                        8, {\n                            density: 0.005,\n                            restitution: 1\n                        }\n                    )\n                )\n\n            }\n            if (this.width > 1200) {\n                this.anchors.push(\n                    this.Bodies.circle(\n                        this.pathLine.segments[i].point.x + this.width / 2.5,\n                        this.pathLine.segments[i].point.y + this.height / 3,\n                        100, {\n                            density: 0.005,\n                            restitution: 1\n                        }\n                    )\n                )\n            } else if (this.width < 1200) {\n                this.anchors.push(\n                    this.Bodies.circle(\n                        this.pathLine.segments[i].point.x + this.width / 2.5,\n                        this.pathLine.segments[i].point.y + this.height / 2,\n                        100, {\n                            density: 0.005,\n                            restitution: 1\n                        }\n                    )\n                )\n\n            }\n        }\n        for (let i = 0; i < this.number; i++) {\n\n            let next = this.circles[i + 1] ? this.circles[i + 1] : this.circles[1]\n            this.links.push(\n                this.Constraint.create({\n                    bodyA: this.circles[i],\n                    bodyB: this.anchors[i],\n                    stiffness: 0.001\n\n                })\n            )\n            this.links.push(\n                this.Constraint.create({\n                    bodyA: this.circles[i],\n                    bodyB: next,\n                    stiffness: 1.5\n                })\n            )\n            /* this.links.push(\n               this.Constraint.create({\n                 bodyA: this.circles[i],\n                 bodyB: this.center,\n                 stiffness: 0.05\n               })\n             )*/\n            let nextnext = this.circles[(i + 2) % this.number];\n            this.links.push(\n                this.Constraint.create({\n                    bodyA: this.circles[i],\n                    bodyB: nextnext,\n                    stiffness: 0.005\n                })\n            )\n        }\n        /*    this.text = new Paper.PointText(new Paper.Point(this.width/10, 400 ));\n            this.text.bringToFront();\n            this.text.justification = 'center';\n            this.text.fillColor = 'black';\n            this.text.content = `\n                Creating Quality\n                Experiences For\n                Clients Looking\n                For the Best\n                Solution.\n            `;\n            this.text.fontSize = 65;\n            this.text.justification=\"left\"\n            this.text.blendMode = \"overlay\";\n\n            this.text.fontWeight = 800*/\n        this.World.add(this.engine.world, this.circles)\n        this.World.add(this.engine.world, this.cursor)\n        this.World.add(this.engine.world, this.links)\n        this.World.add(this.engine.world, this.center)\n\n\n    }\n\n    initPaper() {\n        this.paperCanvas = document.getElementById(\"paper\")\n        this.project = new Paper.Project(this.paperCanvas);\n\n\n    }\n\n    renderLoop() {\n        this.time += 0.05;\n        this.pathLine.smooth();\n        for (let i = 0; i < this.number; i++) {\n            this.pathLine.segments[i].point.x = this.circles[i].position.x;\n            this.pathLine.segments[i].point.y = this.circles[i].position.y;\n            this.shadow.segments[i].point.x = this.circles[i].position.x;\n            this.shadow.segments[i].point.y = this.circles[i].position.y;\n        }\n        this.Body.translate(this.cursor, {\n            x: this.mouse.x,\n            y: this.mouse.y\n        })\n        requestAnimationFrame(this.renderLoop.bind(this))\n    }\n}\n\n/*\n\n// create renderer\n\n\nRender.run(render);\n\n// create runner\nconst runner = Runner.create();\nRunner.run(runner, engine);\n*/\n\n// add bodies\n\n\n// add mouse control\n\n\n// keep the mouse in sync with rendering\n/*\n  render.mouse = mouse;\n*/\n\n// fit the render viewport to the scene\n\n\n// context for MatterTools.Demo\n\n"]},"metadata":{},"sourceType":"module"}