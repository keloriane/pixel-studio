{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kengi\\\\OneDrive\\\\Documents\\\\pixel-studio\\\\src\\\\components\\\\Home_Projects\\\\index.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from 'react';\nimport * as S from './home_projects.styles';\nimport Text from \"../common/Text\";\nimport Project_Item from \"./Project_Item\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport gsap from 'gsap';\nimport ScrollTrigger from \"./../../utils/ScrollTrigger\";\nimport { Link, useHistory } from 'react-router-dom';\nimport { projects } from \"../../utils/projects\";\ngsap.registerPlugin(ScrollTrigger);\n\nvar Home_Projects = function Home_Projects() {\n  var history = useHistory();\n  var textLayer = useRef();\n  var projectContainer = useRef();\n  useEffect(function () {\n    gsap.from(textLayer.current, {\n      scrollTrigger: {\n        trigger: projectContainer.current,\n        end: 'top 100px',\n        scrub: 3\n      },\n      x: '-150%',\n      duration: 15\n    });\n    var cards = document.querySelectorAll('.project-card');\n    gsap.from(cards, {\n      duration: 1,\n      opacity: 0,\n      stagger: 0.2,\n      rotate: 10,\n      transformOrigin: \"top right\",\n      scrollTrigger: {\n        trigger: \".project-section\"\n      }\n    });\n  }, []);\n\n  var handleLink = function handleLink(destination) {\n    history.push(destination);\n  };\n\n  return __jsx(S.Home_Project_Container, {\n    ref: projectContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(S.Home_Project_Title_Layer, {\n    ref: textLayer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, __jsx(Text, {\n    as: \"h2\",\n    fontSize: \"170px\",\n    fontWeight: 600,\n    lineHeight: \"198%\",\n    letterSpacing: \"-0.02rem\",\n    color: \"#000000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Recent Projects\")), __jsx(S.Home_Project_Wrapper, {\n    className: \"project-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(S.Home_Project_List, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, __jsx(Swiper, {\n    spaceBetween: 37,\n    slidesPerView: 3,\n    onSlideChange: function onSlideChange() {\n      return console.log('slide change');\n    },\n    onSwiper: function onSwiper(swiper) {\n      return console.log(swiper);\n    },\n    centeredSlides: true,\n    pagination: {\n      \"clickable\": true\n    },\n    breakpoints: {\n      315: {\n        width: 343,\n        slidesPerView: 1,\n        centeredSlides: false\n      },\n      480: {\n        width: 337,\n        slidesPerView: 1,\n        centeredSlides: false\n      },\n      640: {\n        width: 740,\n        slidesPerView: 2,\n        centeredSlides: true\n      },\n      768: {\n        width: 1170,\n        slidesPerView: 3,\n        centeredSlides: true\n      },\n      1100: {\n        width: 1100,\n        slidesPerView: 3,\n        centeredSlides: true\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, projects.map(function (project, i) {\n    return __jsx(SwiperSlide, {\n      key: i,\n      className: \"project-card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, __jsx(Link, {\n      to: \"/project/\".concat(project.link),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 37\n      }\n    }, __jsx(Project_Item, {\n      image: project.image,\n      discipline: project.discipline,\n      title: project.name,\n      index: \"\".concat(i + 1, \"/\").concat(projects.length),\n      link: project.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 41\n      }\n    })));\n  })))));\n};\n\nexport default Home_Projects;","map":{"version":3,"sources":["C:/Users/kengi/OneDrive/Documents/pixel-studio/src/components/Home_Projects/index.tsx"],"names":["React","useEffect","useRef","S","Text","Project_Item","Swiper","SwiperSlide","gsap","ScrollTrigger","Link","useHistory","projects","registerPlugin","Home_Projects","history","textLayer","projectContainer","from","current","scrollTrigger","trigger","end","scrub","x","duration","cards","document","querySelectorAll","opacity","stagger","rotate","transformOrigin","handleLink","destination","push","console","log","swiper","width","slidesPerView","centeredSlides","map","project","i","link","image","discipline","name","length"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,OAAO,KAAKC,CAAZ,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,MAAR,EAAgBC,WAAhB,QAAkC,cAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,kBAA/B;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AAEAJ,IAAI,CAACK,cAAL,CAAoBJ,aAApB;;AAGA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,MAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,MAAMK,SAAS,GAAGd,MAAM,EAAxB;AACA,MAAMe,gBAAgB,GAAGf,MAAM,EAA/B;AAGAD,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,IAAI,CAACU,IAAL,CAAUF,SAAS,CAACG,OAApB,EAA6B;AACzBC,MAAAA,aAAa,EAAE;AACXC,QAAAA,OAAO,EAAEJ,gBAAgB,CAACE,OADf;AAEXG,QAAAA,GAAG,EAAE,WAFM;AAGXC,QAAAA,KAAK,EAAE;AAHI,OADU;AAMzBC,MAAAA,CAAC,EAAE,OANsB;AAOzBC,MAAAA,QAAQ,EAAE;AAPe,KAA7B;AAUA,QAAMC,KAAK,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,eAA1B,CAAd;AACApB,IAAAA,IAAI,CAACU,IAAL,CAAUQ,KAAV,EAAiB;AACbD,MAAAA,QAAQ,EAAE,CADG;AACAI,MAAAA,OAAO,EAAE,CADT;AACYC,MAAAA,OAAO,EAAE,GADrB;AAC0BC,MAAAA,MAAM,EAAE,EADlC;AACsCC,MAAAA,eAAe,EAAE,WADvD;AACoEZ,MAAAA,aAAa,EAAE;AAC5FC,QAAAA,OAAO,EAAE;AADmF;AADnF,KAAjB;AAOH,GAnBQ,EAmBN,EAnBM,CAAT;;AAoBA,MAAMY,UAAU,GAAG,SAAbA,UAAa,CAACC,WAAD,EAAiB;AAChCnB,IAAAA,OAAO,CAACoB,IAAR,CAAaD,WAAb;AACH,GAFD;;AAGA,SACI,MAAC,CAAD,CAAG,sBAAH;AACI,IAAA,GAAG,EAAEjB,gBADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,MAAC,CAAD,CAAG,wBAAH;AACI,IAAA,GAAG,EAAED,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,MAAC,IAAD;AACI,IAAA,EAAE,EAAE,IADR;AAEI,IAAA,QAAQ,EAAE,OAFd;AAGI,IAAA,UAAU,EAAE,GAHhB;AAII,IAAA,UAAU,EAAE,MAJhB;AAKI,IAAA,aAAa,EAAE,UALnB;AAOI,IAAA,KAAK,EAAE,SAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,CAHJ,EAkBI,MAAC,CAAD,CAAG,oBAAH;AAAwB,IAAA,SAAS,EAAE,iBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,CAAD,CAAG,iBAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,YAAY,EAAE,EADlB;AAEI,IAAA,aAAa,EAAE,CAFnB;AAGI,IAAA,aAAa,EAAE;AAAA,aAAMoB,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN;AAAA,KAHnB;AAII,IAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,aAAYF,OAAO,CAACC,GAAR,CAAYC,MAAZ,CAAZ;AAAA,KAJd;AAKI,IAAA,cAAc,EAAE,IALpB;AAMI,IAAA,UAAU,EAAE;AAAC,mBAAa;AAAd,KANhB;AAOI,IAAA,WAAW,EAAE;AACT,WAAK;AACDC,QAAAA,KAAK,EAAE,GADN;AAEDC,QAAAA,aAAa,EAAE,CAFd;AAGDC,QAAAA,cAAc,EAAE;AAHf,OADI;AAMT,WAAK;AACDF,QAAAA,KAAK,EAAE,GADN;AAEDC,QAAAA,aAAa,EAAE,CAFd;AAGDC,QAAAA,cAAc,EAAE;AAHf,OANI;AAWT,WAAK;AACDF,QAAAA,KAAK,EAAE,GADN;AAEDC,QAAAA,aAAa,EAAE,CAFd;AAGDC,QAAAA,cAAc,EAAE;AAHf,OAXI;AAgBT,WAAK;AACDF,QAAAA,KAAK,EAAE,IADN;AAEDC,QAAAA,aAAa,EAAE,CAFd;AAGDC,QAAAA,cAAc,EAAE;AAHf,OAhBI;AAqBN,YAAM;AACLF,QAAAA,KAAK,EAAE,IADF;AAELC,QAAAA,aAAa,EAAE,CAFV;AAGLC,QAAAA,cAAc,EAAE;AAHX;AArBA,KAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqCQ7B,QAAQ,CAAC8B,GAAT,CAAa,UAACC,OAAD,EAAUC,CAAV;AAAA,WACT,MAAC,WAAD;AACI,MAAA,GAAG,EAAEA,CADT;AAEI,MAAA,SAAS,EAAE,cAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,MAAC,IAAD;AACI,MAAA,EAAE,qBAAcD,OAAO,CAACE,IAAtB,CADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,MAAC,YAAD;AACI,MAAA,KAAK,EAAEF,OAAO,CAACG,KADnB;AAEI,MAAA,UAAU,EAAEH,OAAO,CAACI,UAFxB;AAGI,MAAA,KAAK,EAAEJ,OAAO,CAACK,IAHnB;AAII,MAAA,KAAK,YAAKJ,CAAC,GAAG,CAAT,cAAchC,QAAQ,CAACqC,MAAvB,CAJT;AAKI,MAAA,IAAI,EAAEN,OAAO,CAACG,KALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAJJ,CADS;AAAA,GAAb,CArCR,CADJ,CAFJ,CAlBJ,CADJ;AAoFH,CAjHD;;AAmHA,eAAehC,aAAf","sourcesContent":["import React, {useEffect, useRef} from 'react';\nimport * as S from './home_projects.styles'\nimport Text from \"../common/Text\";\nimport Project_Item from \"./Project_Item\";\nimport {Swiper, SwiperSlide} from \"swiper/react\";\nimport gsap from 'gsap';\nimport ScrollTrigger from \"./../../utils/ScrollTrigger\";\nimport {Link, useHistory} from 'react-router-dom';\nimport {projects} from \"../../utils/projects\";\n\ngsap.registerPlugin(ScrollTrigger);\n\n\nconst Home_Projects = () => {\n    const history = useHistory();\n    const textLayer = useRef();\n    const projectContainer = useRef();\n\n\n    useEffect(() => {\n        gsap.from(textLayer.current, {\n            scrollTrigger: {\n                trigger: projectContainer.current,\n                end: 'top 100px',\n                scrub: 3,\n            },\n            x: '-150%',\n            duration: 15,\n        });\n\n        const cards = document.querySelectorAll('.project-card');\n        gsap.from(cards, {\n            duration: 1, opacity: 0, stagger: 0.2, rotate: 10, transformOrigin: \"top right\", scrollTrigger: {\n                trigger: \".project-section\",\n\n\n            }\n        })\n    }, [])\n    const handleLink = (destination) => {\n        history.push(destination)\n    }\n    return (\n        <S.Home_Project_Container\n            ref={projectContainer}\n        >\n            <S.Home_Project_Title_Layer\n                ref={textLayer}\n            >\n                <Text\n                    as={\"h2\"}\n                    fontSize={\"170px\"}\n                    fontWeight={600}\n                    lineHeight={\"198%\"}\n                    letterSpacing={\"-0.02rem\"}\n\n                    color={\"#000000\"}\n                >\n                    Recent Projects\n                </Text>\n            </S.Home_Project_Title_Layer>\n            <S.Home_Project_Wrapper className={\"project-section\"}>\n\n                <S.Home_Project_List>\n                    <Swiper\n                        spaceBetween={37}\n                        slidesPerView={3}\n                        onSlideChange={() => console.log('slide change')}\n                        onSwiper={(swiper) => console.log(swiper)}\n                        centeredSlides={true}\n                        pagination={{\"clickable\": true}}\n                        breakpoints={{\n                            315: {\n                                width: 343,\n                                slidesPerView: 1,\n                                centeredSlides: false\n                            },\n                            480: {\n                                width: 337,\n                                slidesPerView: 1,\n                                centeredSlides: false\n                            },\n                            640: {\n                                width: 740,\n                                slidesPerView: 2,\n                                centeredSlides: true\n                            },\n                            768: {\n                                width: 1170,\n                                slidesPerView: 3,\n                                centeredSlides: true\n\n                            }, 1100: {\n                                width: 1100,\n                                slidesPerView: 3,\n                                centeredSlides: true\n                            },\n\n                        }}\n                    >\n                        {\n                            projects.map((project, i) => (\n                                <SwiperSlide\n                                    key={i}\n                                    className={\"project-card\"}\n                                >\n                                    <Link\n                                        to={`/project/${project.link}`}\n                                    >\n                                        <Project_Item\n                                            image={project.image}\n                                            discipline={project.discipline}\n                                            title={project.name}\n                                            index={`${i + 1}/${projects.length}`}\n                                            link={project.image}/>\n\n                                    </Link>\n                                </SwiperSlide>\n                            ))\n                        }\n                    </Swiper>\n\n                </S.Home_Project_List>\n            </S.Home_Project_Wrapper>\n        </S.Home_Project_Container>\n    )\n}\n\nexport default Home_Projects;\n"]},"metadata":{},"sourceType":"module"}