{"ast":null,"code":"import { css } from 'styled-components';\nimport { breakPoints } from './theme';\nexport const respondMin = (breakPoint, innerCss) => {\n  if (breakPoints[breakPoint]) {\n    const breakPointValue = breakPoints[breakPoint];\n    return css`\n      @media (min-width: ${breakPointValue}) {\n        ${innerCss}\n      }\n    `;\n  }\n\n  throw 'error breakpoints doesnt exist';\n};\nexport const respondMax = (breakPoint, innerCss) => {\n  if (breakPoints[breakPoint]) {\n    const breakPointValue = breakPoints[breakPoint];\n    return css`\n      @media (max-width: ${breakPointValue}) {\n        ${innerCss}\n      }\n    `;\n  }\n\n  throw 'error breakpoints doesnt exist';\n};\nexport const respondBetween = (lower, upper, innerCss) => {\n  const lowerBreakPoints = breakPoints[lower];\n  const upperBreakPoints = parseInt(breakPoints[upper]) - 1 + 'px';\n\n  if (breakPoints[lower] && breakPoints[upper]) {\n    return css`\n      @media (min-width: ${lowerBreakPoints}) and (max-width: ${upperBreakPoints}) {\n        ${innerCss}\n      }\n    `;\n  } else if (!!breakPoints[lower]) {\n    throw 'Your lower breakpoint was invalid:' + breakPoints[lower];\n  } else if (!!breakPoints[upper]) {\n    throw 'Your upper breakpoint was invalid:' + breakPoints[upper];\n  }\n};","map":{"version":3,"sources":["C:/Users/kengi/OneDrive/Documents/pixel-studio/src/styles/mixins.ts"],"names":["css","breakPoints","respondMin","breakPoint","innerCss","breakPointValue","respondMax","respondBetween","lower","upper","lowerBreakPoints","upperBreakPoints","parseInt"],"mappings":"AAAA,SAASA,GAAT,QAAoB,mBAApB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,UAAD,EAAaC,QAAb,KAA0B;AAClD,MAAIH,WAAW,CAACE,UAAD,CAAf,EAA6B;AAC3B,UAAME,eAAe,GAAGJ,WAAW,CAACE,UAAD,CAAnC;AACA,WAAOH,GAAI;AACf,2BAA2BK,eAAgB;AAC3C,UAAUD,QAAS;AACnB;AACA,KAJI;AAKD;;AACD,QAAM,gCAAN;AACD,CAVM;AAYP,OAAO,MAAME,UAAU,GAAG,CAACH,UAAD,EAAaC,QAAb,KAA0B;AAClD,MAAIH,WAAW,CAACE,UAAD,CAAf,EAA6B;AAC3B,UAAME,eAAe,GAAGJ,WAAW,CAACE,UAAD,CAAnC;AACA,WAAOH,GAAI;AACf,2BAA2BK,eAAgB;AAC3C,UAAUD,QAAS;AACnB;AACA,KAJI;AAKD;;AACD,QAAM,gCAAN;AACD,CAVM;AAYP,OAAO,MAAMG,cAAc,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAeL,QAAf,KAA4B;AACxD,QAAMM,gBAAgB,GAAGT,WAAW,CAACO,KAAD,CAApC;AACA,QAAMG,gBAAgB,GAAGC,QAAQ,CAACX,WAAW,CAACQ,KAAD,CAAZ,CAAR,GAA+B,CAA/B,GAAmC,IAA5D;;AACA,MAAIR,WAAW,CAACO,KAAD,CAAX,IAAsBP,WAAW,CAACQ,KAAD,CAArC,EAA8C;AAC5C,WAAOT,GAAI;AACf,2BAA2BU,gBAAiB,qBAAoBC,gBAAiB;AACjF,UAAUP,QAAS;AACnB;AACA,KAJI;AAKD,GAND,MAMO,IAAI,CAAC,CAACH,WAAW,CAACO,KAAD,CAAjB,EAA0B;AAC/B,UAAM,uCAAuCP,WAAW,CAACO,KAAD,CAAxD;AACD,GAFM,MAEA,IAAI,CAAC,CAACP,WAAW,CAACQ,KAAD,CAAjB,EAA0B;AAC/B,UAAM,uCAAuCR,WAAW,CAACQ,KAAD,CAAxD;AACD;AACF,CAdM","sourcesContent":["import { css } from 'styled-components';\nimport { breakPoints } from './theme';\n\nexport const respondMin = (breakPoint, innerCss) => {\n  if (breakPoints[breakPoint]) {\n    const breakPointValue = breakPoints[breakPoint];\n    return css`\n      @media (min-width: ${breakPointValue}) {\n        ${innerCss}\n      }\n    `;\n  }\n  throw 'error breakpoints doesnt exist';\n};\n\nexport const respondMax = (breakPoint, innerCss) => {\n  if (breakPoints[breakPoint]) {\n    const breakPointValue = breakPoints[breakPoint];\n    return css`\n      @media (max-width: ${breakPointValue}) {\n        ${innerCss}\n      }\n    `;\n  }\n  throw 'error breakpoints doesnt exist';\n};\n\nexport const respondBetween = (lower, upper, innerCss) => {\n  const lowerBreakPoints = breakPoints[lower];\n  const upperBreakPoints = parseInt(breakPoints[upper]) - 1 + 'px';\n  if (breakPoints[lower] && breakPoints[upper]) {\n    return css`\n      @media (min-width: ${lowerBreakPoints}) and (max-width: ${upperBreakPoints}) {\n        ${innerCss}\n      }\n    `;\n  } else if (!!breakPoints[lower]) {\n    throw 'Your lower breakpoint was invalid:' + breakPoints[lower];\n  } else if (!!breakPoints[upper]) {\n    throw 'Your upper breakpoint was invalid:' + breakPoints[upper];\n  }\n};\n"]},"metadata":{},"sourceType":"module"}