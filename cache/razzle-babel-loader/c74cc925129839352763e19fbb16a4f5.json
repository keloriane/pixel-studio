{"ast":null,"code":"import _extends from \"C:/Users/kengi/OneDrive/Documents/pixel-studio/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kengi\\\\OneDrive\\\\Documents\\\\pixel-studio\\\\src\\\\components\\\\common\\\\Text\\\\index.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport * as S from './text.styles';\n\nvar Text = function Text(props) {\n  return __jsx(S.Text, _extends({\n    className: \"\".concat(props.className, \" text-builder\")\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default Text;","map":{"version":3,"sources":["C:/Users/kengi/OneDrive/Documents/pixel-studio/src/components/common/Text/index.tsx"],"names":["React","S","Text","props","className"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,OAAO,KAAKC,CAAZ,MAAmB,eAAnB;;AAyCA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAkB;AAC7B,SAAO,MAAC,CAAD,CAAG,IAAH;AAAQ,IAAA,SAAS,YAAKA,KAAK,CAACC,SAAX;AAAjB,KAA0DD,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFD;;AAIA,eAAeD,IAAf","sourcesContent":["import React, { ReactChildren } from 'react';\nimport _ from 'lodash';\nimport * as S from './text.styles';\nimport styled, { css } from 'styled-components';\n\ninterface Clamp {\n  min: number;\n  vw: number;\n  max: number;\n}\n\nexport type FontSizeOrClamp = number | Clamp;\n\nexport interface IText {\n  as?: React.ElementType;\n  backgroundColor?: string;\n  color?: string | React.ReactNode;\n  className?: string;\n  debug?: boolean;\n  display?: string;\n  fontFamily?: string;\n  fontSize?: FontSizeOrClamp | string;\n  fontStyle?: string;\n  fontWeight?: number;\n  lineHeight?: number | string;\n  linkHoverColor?: string;\n  linkVisitedColor?: string;\n  maxWidth?: number;\n  noLink?: boolean;\n  opacity?: number;\n  stacked?: boolean;\n  textTransform?: string;\n  textDecoration?: string;\n  textDecorationColor?: string;\n  variants?: any;\n  zIndex?: number;\n  children?: any | any[];\n  maxLines?: number;\n  letterSpacing?: string;\n  textAlign?: string;\n  textIndent?: string;\n}\n\nconst Text = (props: IText) => {\n  return <S.Text className={`${props.className} text-builder`} {...props} />;\n};\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}